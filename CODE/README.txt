Главное меню "жестко" связано с классами-командами (наследники абстрактного Option.java)
в пакете MENU_COMMAND\
У животных типы (CLASSES\Type.java - домашние, дикие, вьючные и т.п.) и виды (CLASSES\Sub_type.java - волки, кошки, коровы и пр.).
Родительский класс - Sub_type с полями ID и Name, наследник - Type с доп.полем - список видов. В диаграмме - наоборот, но мне показалось так лучше..
В классе Animal поля : ID, ID Sub_type-коровы, кошки (ссылка на тип - дикие, домашние в объекте Animal не содержится и вычисляется перебором списка видов и типов(с со списком видов) по совпадениям.
В классе reestr - список Anumal, список видов, список типов, int max_id_animals,max_id_типов,max_id_видов.
При добавлении животного, можно создавать новые типы (рыбы, птицы) и виды уже существующих типов (подтягиваются к существующему типу автоматически)
Выбор из списка типов и видов организован по порядку (а не по ID) для удобства пользователя, из-за чего, на всех выборках приходится находить перебором индекс в ArrayList, соответствующий порядковому номеру в UI списке (через ID).
При удалении - если животное последнее в реестре вида (кошка, корова) - удалится (после подтверждения) и сам вид. Аналогично с типами (дикие,домашние), если удаляемый вид - последний в типе - такой тип удалится из реестра. Т.о. "пустых" типов и видов в реестре не хранится.
Вывод всего реестра осуществляется в сокр.виде - одно животное - одна строка с мин.набором данных.
Вывод полной инф. о животном по ID включает в себя выполняемые комманды и осуществляется в более развернутом виде.
Прроект выполнен в соответствии MVP , принципы Solid доделать не смог по причине вышеописанной поломки, как и запись в файл.
